{
  "_args": [
    [
      {
        "raw": "kss@github:kss-node/kss-node",
        "scope": null,
        "escapedName": "kss",
        "name": "kss",
        "rawSpec": "github:kss-node/kss-node",
        "spec": "github:kss-node/kss-node",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:kss-node/kss-node.git",
          "sshUrl": "git+ssh://git@github.com/kss-node/kss-node.git",
          "httpsUrl": "git+https://github.com/kss-node/kss-node.git",
          "gitUrl": "git://github.com/kss-node/kss-node.git",
          "shortcut": "github:kss-node/kss-node",
          "directUrl": "https://raw.githubusercontent.com/kss-node/kss-node/master/package.json"
        }
      },
      "/home/atom/drupal/docroot/themes/fortytwo-atom"
    ]
  ],
  "_from": "kss-node/kss-node",
  "_id": "kss@3.0.0-beta.14",
  "_inCache": true,
  "_installable": true,
  "_location": "/kss",
  "_phantomChildren": {
    "camelcase": "2.1.1",
    "cliui": "3.2.0",
    "decamelize": "1.2.0",
    "fs.realpath": "1.0.0",
    "graceful-fs": "4.1.4",
    "inflight": "1.0.5",
    "inherits": "2.0.1",
    "jsonfile": "2.3.1",
    "klaw": "1.3.0",
    "minimatch": "3.0.2",
    "once": "1.3.3",
    "os-locale": "1.4.0",
    "path-is-absolute": "1.0.0",
    "rimraf": "2.5.3",
    "string-width": "1.0.1",
    "y18n": "3.2.1"
  },
  "_requested": {
    "raw": "kss@github:kss-node/kss-node",
    "scope": null,
    "escapedName": "kss",
    "name": "kss",
    "rawSpec": "github:kss-node/kss-node",
    "spec": "github:kss-node/kss-node",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:kss-node/kss-node.git",
      "sshUrl": "git+ssh://git@github.com/kss-node/kss-node.git",
      "httpsUrl": "git+https://github.com/kss-node/kss-node.git",
      "gitUrl": "git://github.com/kss-node/kss-node.git",
      "shortcut": "github:kss-node/kss-node",
      "directUrl": "https://raw.githubusercontent.com/kss-node/kss-node/master/package.json"
    }
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git://github.com/kss-node/kss-node.git#22c8a68f51b581974ae11e914bd79de17195f06d",
  "_shasum": "62fb66065ca1ba7d26dd4701e20c2259f40078d6",
  "_shrinkwrap": null,
  "_spec": "kss@github:kss-node/kss-node",
  "_where": "/home/atom/drupal/docroot/themes/fortytwo-atom",
  "author": {
    "name": "John Albin Wilkins",
    "email": "virtually.johnalbin@gmail.com",
    "url": "http://john.albin.net/"
  },
  "bin": {
    "kss": "./bin/kss",
    "kss-node": "./bin/kss-node"
  },
  "bugs": {
    "url": "https://github.com/kss-node/kss-node/issues"
  },
  "dependencies": {
    "bluebird": "^3.3.3",
    "fs-extra": "^0.30.0",
    "glob": "^7.0.3",
    "handlebars": "^4.0.0",
    "marked": "^0.3.5",
    "twig": "^0.9.5",
    "yargs": "^3.30.0"
  },
  "description": "The Node.js port of KSS: A methodology for documenting CSS and building style guides",
  "devDependencies": {
    "chai": "^3.5.0",
    "coveralls": "^2.11.9",
    "eslint": "^3.0.0",
    "istanbul": "^0.4.3",
    "jsdoc": "^3.4.0",
    "mocha": "^2.5.1",
    "mock-utf8-stream": "^0.1.1"
  },
  "directories": {
    "bin": "bin",
    "example": "demo",
    "test": "test"
  },
  "engines": {
    "node": ">=4.0"
  },
  "gitHead": "22c8a68f51b581974ae11e914bd79de17195f06d",
  "homepage": "http://kss-node.github.io/kss-node",
  "keywords": [
    "styleguide",
    "kss",
    "kss-node"
  ],
  "license": "(MIT OR GPL-2.0)",
  "main": "index.js",
  "name": "kss",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://secure.travis-ci.org/kss-node/kss-node.png?branch=master)](http://travis-ci.org/kss-node/kss-node/builds) [![Coverage Status](https://coveralls.io/repos/kss-node/kss-node/badge.svg?branch=master&service=github)](https://coveralls.io/github/kss-node/kss-node?branch=master)\n\n**Note:** This README is for the `master` branch of this project. To see the README for the latest stable release see [https://www.npmjs.com/package/kss](https://www.npmjs.com/package/kss).\n\n# kss-node\n\nThis is a Node.js implementation of [Knyle Style Sheets](https://github.com/kneath/kss) (KSS), \"a documentation syntax for CSS\" that's intended to have syntax readable by humans *and* machines. Hence, the kss-node software can be used to create a \"living style guide\".\n\n1. Write human-readable documentation using \"KSS syntax\" comments.\n2. Have the `kss` tool automatically build a style guide from your stylesheets.\n\nHere's an example KSS comment:\n```scss\n// Button\n//\n// Your standard button suitable for clicking.\n//\n// :hover   - Highlights when hovering.\n// .shiny   - Do not press this big, shiny, red button.\n//\n// Markup: button.html\n//\n// Style guide: components.button\n.button {\n  ...\n}\n.button.shiny {\n  ...\n}\n```\n\nThe methodology and ideas behind Knyle Style Sheets are contained in [the specification](https://github.com/kss-node/kss/blob/spec/SPEC.md).\n\nThere's an example project in the [demo directory](https://github.com/kss-node/kss-node/tree/master/demo) of this repo.\n\n## Installation\n\nkss-node is installed just like any other Node.js software. Read the [kss-node Quick Start Guide](https://github.com/kss-node/kss-node/wiki/Quick-Start-Guide) to learn more. It also includes an npm Quick Start Guide, if you don't know much about Node.js's npm command.\n\n## Using the command line tool\n\nTo get you up and running quickly, a style guide builder is included that can be used from the command line. It parses stylesheets and spits out a set of static HTML files.\n\n```\nUsage: kss [options]\n\nFile locations:\n  --source       Source directory to parse for KSS comments\n  --destination  Destination directory of style guide    [default: \"styleguide\"]\n  --mask, -m     Use a mask for detecting files containing KSS comments\n                         [default: \"*.css|*.less|*.sass|*.scss|*.styl|*.stylus\"]\n  --config, -c   Load the kss options from a json file\n\nBuilder:\n  --clone        Clone a style guide builder to customize\n  --builder, -b  Use the specified builder when building your style guide\n                                                 [default: \"builder/handlebars\"]\n\nStyle guide:\n  --css          URL of a CSS file to include in the style guide\n  --js           URL of a JavaScript file to include in the style guide\n  --custom       Process a custom property name when parsing KSS comments\n  --extend       Location of modules to extend Handlebars; see\n                 http://bit.ly/kss-wiki\n  --homepage     File name of the homepage's Markdown file\n                                                        [default: \"homepage.md\"]\n  --placeholder  Placeholder text to use for modifier classes\n                                                   [default: \"[modifier class]\"]\n  --title        Title of the style guide           [default: \"KSS Style Guide\"]\n  --nav-depth    Limit the navigation to the depth specified        [default: 3]\n\nOptions:\n  --verbose       Display verbose details while building\n  --demo          Builds a KSS demo.\n  --help, -h, -?  Show help\n  --version       Show version number\n```\n\nSince each builder has its own set of options, you can see the help for those options by using `--builder` with `--help`. For example, running `kss --help --builder builder/twig` will show these additional options:\n\n```\nStyle guide:\n  --extend          Location of modules to extend Twig.js; see\n                    http://bit.ly/kss-wiki\n  --extend-drupal8  Extend Twig.js using kss's Drupal 8 extensions\n  --namespace       Adds a Twig namespace, given the formatted string:\n                    \"namespace:path\"\n```\n\nIn order to parse your stylesheets containing KSS docs, you need to either specify a single directory as the first argument or you can specify one or more source directories with one or more `--source [directory]` flags.\n\nThe style guide will be built in the `styleguide` directory unless you specify the second argument or use a `--destination [directory]` flag.\n\nEven though kss parses your CSS source, your CSS won't be included in the style guide unless you use the `--css` option or create a custom builder with `--clone`.\n\nYou can build a copy of the demo style guide like so:\n\n    $ kss --demo\n\nIf you want to change the HTML of the style guide being built, you can create your own builder, i.e. skin, theme. Use the `kss --clone` command to initialize a copy of the default builder so you can edit it and use it when building your style guide with the `--builder` flag.\n\n    $ kss --clone custom-builder\n    $ kss path/to/sass styleguide --builder custom-builder\n\nThe default builder should look something like this:\n\n![Handlebars Builder Preview](https://raw.github.com/kss-node/kss-node/master/demo/preview.png)\n\n## Differences from kneath/kss\n\nUnlike the default Ruby implementation at kneath/kss, kss-node includes a few optional features to allow for completely automated style guide building.\n\n**Language Agnostic**. kss-node does not care what language your application is written in (Ruby, Node.js, PHP, whatever). It just scans your CSS source files looking for KSS docs so that it can build a living style guide. And since it only looks for properly formatted KSS comments, it also doesn't need to know what kind of CSS preprocessor you use either.\n\n**Homepage Text**. The overview text needed for the style guide homepage is built from a Markdown file, which you should place in a `--source` directory, just name it `homepage.md` and it will be included in the final style guide automatically.\n\nAdditional kss-node specifics are detailed in this version of the [KSS spec](https://github.com/kss-node/kss/blob/spec/SPEC.md).\n\nTake a look at the [demo project](https://github.com/kss-node/kss-node/tree/master/demo) for some examples.\n\n## Using kss from Node.js\n\nCheck out the [JavaScript API](http://kss-node.github.io/kss-node/section-javascript-api.html) for a full explanation. Here's an example:\n\n``` javascript\nvar kss = require('kss'),\n    options = {\n        markdown: false\n    };\n\nkss.traverse('public/stylesheets/', options, function(error, styleGuide) {\n    if (error) throw error;\n\n    styleGuide.sections('2.1.1')                                   // <KssSection>\n    styleGuide.sections('2.1.1').modifiers(0)                      // <KssModifier>\n    styleGuide.sections('2.1.1').modifiers(':hover').description() // 'Subtle hover highlight'\n    styleGuide.sections('2.1.1').modifiers(0).className()          // 'pseudo-class-hover'\n    styleGuide.sections('2.x.x')                                   // [<KssSection>, ...]\n    styleGuide.sections('2.1.1').modifiers()                       // [<KssModifier>, ...]\n});\n```\n\n## Development\n\nForking, hacking, and tearing apart of this software is welcome! It still needs some cleaning up.\n\nAfter you've cloned this repository, run `npm install` and then you'll be able to run the module's mocha and eslint tests with `npm test`.\n\nTo build a new version of the demo style guide, use `make docs`. After committing your changes to master you can use the `gh-pages.sh` script to move this over to the `gh-pages` branch real quick.\n\n## Contributors\n\nLots! And more are welcome. https://github.com/kss-node/kss-node/graphs/contributors\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/kss-node/kss-node.git"
  },
  "scripts": {
    "docs": "make docs",
    "posttest": "eslint bin/kss bin/kss-node .",
    "report-coverage": "cat ./coverage/lcov.info | coveralls",
    "test": "istanbul cover _mocha"
  },
  "version": "3.0.0-beta.14"
}
